# Use postgres/example user/password credentials
version: '3.5'

services:
  pgsql:
    container_name: pg_container
    build: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-123456}
      POSTGRES_DB: ${POSTGRES_DB:-postgres_db}
      PGDATA: ${PGDATA:-/data/postgres}
    volumes:
      - v_postgres:${PGDATA:-/data/postgres}
      # - ./init/role.sh:/docker-entrypoint-initdb.d/role.sh
      # - ./init/sdpm.sql:/docker-entrypoint-initdb.d/data.sql
    ports:
      - '${DB_PORT:-5432}:5432'
    networks:
      - n_psql
    restart: on-failure
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}']
      interval: 10s
      timeout: 5s
      retries: 5
    logging:
      options:
        max-size: 10m
        max-file: '3'

  sdp_pgadmin:
    container_name: pgadm_container
    # build: ./pgadmin
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-admin@admin.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-123456}
    volumes:
      - v_pgadmin:/root/.pgadmin
      - ./pgadmin/config/servers.json:/pgadmin4/servers.json:rw
      - ./pgadmin/config/pgpass:/pgadmin4/pgpass:ro
    ports:
      - '${PGADMIN_PORT:-5050}:80'
    networks:
      - n_psql
    restart: on-failure

networks:
  n_psql:
    driver: bridge

volumes:
  v_postgres:
  v_pgadmin:
    driver: local
